name: Android CI

on:
  pull_request:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Unit Test
        run: ./gradlew test --stacktrace

  detekt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: run detekt
        run: ./gradlew detekt

  generate-apk:
    name: Generate release apk
    needs: [ test, detekt ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Assemble Release
        run: ./gradlew assembleRelease

      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload App
        uses: actions/upload-artifact@v2
        with:
          name: release.apk
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}

      - uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: app/build/outputs/mapping/release/mapping.txt

  release:
    name: Release apk
    needs: generate-apk
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v2
        with:
          name: release.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

#      - name: Set name of artifact
#        id: set-name-artifact
#        run: |
#          ARTIFACT_PATHNAME_APK=$(ls app/build/outputs/apk/debug/*.apk | head -n 1)
#          ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
#          echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
#          echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
#          echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV

      - name: Upload APK
        id: upload-artifact-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-release-unsigned-signed.apk
          asset_name: app-release.apk
          asset_content_type: application/zip
